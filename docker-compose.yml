version: "3"

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/:cached

  backend:
    restart: always
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #     - /app/.next
  #   ports:
  #     - 3000:3000
  #   expose:
  #     - 3000


  rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
        - "5672:5672"
    logging:
     driver: none

  celery_worker:
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - postgres
      - rabbitmq
      - backend
    command: celery -A celery_worker worker --concurrency=20 --loglevel=INFO

  celery_beat:
    environment:
    - DJANGO_READ_DOT_ENV_FILE=true
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - postgres
      - rabbitmq
      - backend
    command: celery -A celery_worker beat -l DEBUG

  celery_flower:
   environment:
    - DJANGO_READ_DOT_ENV_FILE=true
   env_file:
    - ./backend/.env
   build:
      context: ./backend
      dockerfile: Dockerfile.celery
   volumes:
    - ./backend:/usr/src/app
   depends_on:
     - celery_worker
     - celery_beat
   ports:
     - "5555:5555"
   command: /bin/sh -c "/usr/src/app/entrypoints/celery_flower.sh"

volumes:
  postgres_data:
    driver: local
